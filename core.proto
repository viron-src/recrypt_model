// Copyright © Viron Software ⨈
// Entire gRPC API surface for Recrypt Core Services.
syntax = "proto3";
package recrypt;
import "google/protobuf/empty.proto";
import "types/core_types.proto";

// Core services.
service Core {
  // Authentication types ---
  // Anonymous RPC - No authentication required.
  // Client Session Key RPC - Front-end session key. Source client IP address must be equal issuance client IP address except for native mobile sessions.
  // API Key RPC - API key associated with the account.

  // Used by frontend and API clients for receiving system events stream and live market data stream.
  // If the associated session or API key has subscribed to market data, an initial snapshot will be returned then incremental changes.
  // Refer to SystemFeedSubscribe below on how to subscribe to market data events.
  //////------------------------------------------/-//
  // Anonymous | Client Session Key | API Key
  // [X]         [X]                  [X]
  rpc SystemFeed (types.SystemFeedRequest) returns (stream types.SystemFeedData) {}

  // Adjust the live market data a SystemFeed RPC stream will return.
  // You can call this on an existing session or API key multiple times that already has a SystemFeed running.
  // All sessions running a SystemFeed rpc (above) will start returning requested market data shortly after as a stream.
  // NOTE: Calling SystemFeedSubscribe will push down latest state snapshot for all requested markets on any active live streaming SystemFeed's,
  // and then only send incremental changes thereafter, even if the same markets were requested.
  //////------------------------------------------/-//
  // Anonymous | Client Session Key | API Key
  // [X]*        [X]                  [X] (Readonly)
  rpc SystemFeedSubscribe (types.SystemFeedSubscribeRequest) returns (types.SystemFeedSubscribeResponse) {}

  // Used for determining latency.
  //////------------------------------------------/-//
  // Anonymous | Client Session Key | API Key
  // [X]         [ ]                  [ ]
  rpc Ping (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // Returns if a provided address is valid for withdrawals.
  //////------------------------------------------/-//
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X] (Readonly)
  rpc ValidateAddress (types.ValidateAddressRequest) returns (types.ValidateAddressResponse) {}

  // Allocates a new deposit address for the given currency.
  // For fiat currencies there may only be 1 address per account, for cryptocurrencies there may be more than 1 depending on the internal configuration.
  //////------------------------------------------/-//
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X] (Write-enabled)
  rpc AllocateDepositAddress (types.AllocateDepositAddressRequest) returns (types.AllocateDepositAddressResponse) {}

  // Retrieves all deposit addresses for the given currency.
  //////------------------------------------------/-//
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X] (Readonly)
  rpc GetDepositAddresses (types.GetDepositAddressesRequest) returns (types.GetDepositAddressesResponse) {}

  // Retrieves all received deposits including any pending deposits.
  //////---
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X] (Readonly)
  rpc GetDepositsReceived (types.GetDepositsReceivedRequest) returns (types.GetDepositsReceivedResponse) {}

  // Retrieves the account balance for all supported currencies where the balance is greater than zero.
  // This does not include any currency currently included as part of an order on any order book.
  //////---
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X] (Readonly)
  rpc GetBalances (types.GetBalancesRequest) returns (types.GetBalancesResponse) {}

  // Call this function to check if there is any upcoming, ongoing maintenance or downtime.
  // Any scheduled maintenance downtime should be visible from this API at-least a few days prior.
  // Please read readme.md: Section 'Retry on failure'.
  //////---
  // Anonymous | Client Session Key | API Key
  // [X]         [ ]                  [ ]
  rpc MaintenanceCheck (types.MaintenanceCheckRequest) returns (types.MaintenanceCheckResponse) {}

  // Retrieves executed transactions.
  //////---
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X] (Readonly)
  rpc GetTransactions (types.GetTransactionsRequest) returns (types.GetTransactionsResponse) {}

  // Retrieves available markets.
  //////---
  // Anonymous | Client Session Key | API Key
  // [X]         [ ]                  [ ]
  rpc GetMarkets (types.GetMarketsRequest) returns (types.GetMarketsResponse) {}

  // Places an order for execution by the matching engine.
  // MARKET ORDER DOCUMENTATION:
  // Market orders can partially be filled and be gRPC OK if there is not enough liquidity (OrderStatus will be PARTIALLY_FILLED).
  // If there is no liquidity on the market side being purchased then the response will still be gRPC OK with no changes (OrderStatus will be REJECTED).
  // MARKER ORDER ERRORS:
  // Not enough money:            gRPC error code INVALID_ARGUMENT with trailing message '|insufficient-funds'
  // Too many decimal places:     gRPC error code INVALID_ARGUMENT with trailing message '|order-quantity-decimal-places' OR '|order-price-decimal-places' OR '|order-quote-order-quantity-decimal-places'
  // Disabled or unknown market:  gRPC error code INVALID_ARGUMENT with trailing message '|unknown-market'
  // Base quantity to small:      gRPC error code INVALID_ARGUMENT with trailing message '|order-quantity-too-small'
  // Notional quantity too small: gRPC error code INVALID_ARGUMENT with trailing message '|order-notional-too-small'
  //////---
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X] (Write-enabled)
  rpc Order (types.OrderRequest) returns (types.OrderResponse) {}

  // Cancels an order.
  //////---
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X] (Write-enabled)
  rpc CancelOrder (types.CancelOrderRequest) returns (types.CancelOrderResponse) {}

  // List all orders on a market.
  //////---
  // Anonymous | Client Session Key | API Key
  // [ ]         [X]                  [X]
  rpc ListOrders (types.ListOrdersRequest) returns (types.ListOrdersResponse) {}
}